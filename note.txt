Project setup
---------------
    - initialize npm in the root folder not in backend folder or frontend
    - install mango@4 mongoose dotenv

Backend
    - create file => server.js => which is the entry point of our apis
    - in order to make the server listening watch whatever change you do, then you need to use
        -> nodemon package
    - when adding the shcam you can add createdAt, updatedAt
        new Schema({//here teh schema}, {timestamps: true})

    - connecting to the database
        mongodb+srv://aliabdulbaqi01:0599709635aA@cluster0.b9sz861.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0



Frontend
    - install react
        => cd .\frontend -> npm create vite@latest . -> react -> javaScript  ->  npm install => npm run dev
    -> chakra UI
       => npm i @chakra-ui/react@2 @emotion/react @emotion/styled framer-motion
       => wrap chakra provider at the root of your app
    -> for pages
       => in the frontend  => npm i react-router-dom
       => wrap app with the  BrowserRouter component
    -> for icons
        => i react-icons
        => or you can use chakra UI icons
    -> extensions
       => ES7 + React/Redux/React-native snippets => use this snippet => rafce


    -> components we use from chekra
        => <Box minH={"100vh"}> add the page jsx here </box>




toggleColor:
    => useColorMode hooks that provided by chakra UI
        - will return the current value of the color mode & the handler to toggle
    => useColorModeValue()
        - add it to the color style see it will return value in the light and other value in the dark



Global storage:
    => we will create a global storage so we can have access it from anywhere of our application
